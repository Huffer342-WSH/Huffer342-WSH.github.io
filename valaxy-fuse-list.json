[{"title":"INDEX","tags":[],"categories":[],"author":"Huffer","excerpt":"\n[播客主页](https://huffer342-wsh.github.io)\n\n这个博客用于记录生活和学习，顺便提前写一些东西来应付每周组会 :sweat_smile:\n\n## 博客框架\n\n[云游","link":"/posts"},{"title":"资源收藏","tags":[],"categories":[],"author":"Huffer","excerpt":"\n[adobe资源——m0nkrus](https://w14.monkrus.ws/)\n\n[adobe资源——vposy](https://pan.baidu.com/share/init?surl","link":"/posts/resource"},{"title":"学习笔记——索引页","tags":[],"categories":[],"author":"Huffer","excerpt":"\n\n[博客](https://huffer342-wsh.github.io)的子模块，主要用于放一些学习相关的笔记。\n\n## 毫米波雷达相关\n\n[LFMCM雷达工作原理](./radar/LFMCW","link":"/posts/myNotes/README"},{"title":"自定义linux终端提示符格式，添加Git信息","tags":[],"categories":["教程"],"author":"Huffer","excerpt":"\n终端提示符的格式通过`PS1`环境变量控制。在终端中查看`PS1`\n```sh\necho $PS1\n```\n\n![alt text](../assets/Customize_the_format_o","link":"/posts/myNotes/guide/Customize_the_format_of_the_Linux_terminal_prompt"},{"title":"WSL2中安装Cuda和Pytorch","tags":[],"categories":[],"author":"Huffer","excerpt":"\n参考资料：来自[公孙启](https://www.gongsunqi.xyz/)的文章[《Windows11 + WSL Ubuntu + Pycharm + Conda for deeplearn","link":"/posts/myNotes/guide/Install_Cuda_and_pytorch_in_WSL"},{"title":"Grub手动引导linux","tags":[],"categories":["教程"],"author":"Huffer","excerpt":"\n捣鼓往移动硬盘里装系统的时候一不小心把系统引导搞丢了，导致一开机就进了Grub的命令行界面，而不是正常的选系统界面。这个时候我的系统已经装在硬盘里了，只不过引导出了问题，所以可以在Grub的命令行界面手动引导系统。\n\n","link":"/posts/myNotes/guide/Manually_booting_the_Linux_kernel_from_GRUB"},{"title":"优化PowerShell","tags":[],"categories":["教程"],"author":"Huffer","excerpt":"\n## 0. 精简版\n\n1. 安装 `PSReadLine`,`oh-my-posh`,`posh-git`\n    ```powershell\n    Install-Module PSReadLi","link":"/posts/myNotes/guide/Optimizing_PowerShell"},{"title":"解决CMake在使用MSVC时构建打印大量包含信息的问题","tags":[],"categories":[],"author":"Huffer","excerpt":"\n## 解决方案\n\n\n```cmake\nif(MSVC)\n    message(STATUS \"Using MSVC\")\n\n    # 关闭警告 C4819: 无效的字符。避免中文注释被警告\n   ","link":"/posts/myNotes/guide/Solve_the_problem_of_CMake_printing_a_lot_of_included_information_when_building_with_MSVC"},{"title":"WSL2中安装Vivado","tags":[],"categories":[],"author":"Huffer","excerpt":"\n众所周知Vivado综合和布线非常的慢，而且windows下的vivado比linux里装的慢不少，不过可以使用高性能的远程主机加速编译，恰好实验室有一台装了ubuntu的工作站，因此想试一试。\n\n","link":"/posts/myNotes/guide/install_vivado_in_wsl"},{"title":"使用NFS将服务端文件挂载到客户端","tags":[],"categories":["教程"],"author":"Huffer","excerpt":"\n最近写python代码跑起来有点慢，想要使用服务器来跑。不过我有想要文件存在我的电脑上，所以选择使用NFS将本地文件挂载到远程服务器上，然后用VSCode连接远程服务器上写代码。\n\n\nNFS（Net","link":"/posts/myNotes/guide/nfs"},{"title":"使用LiveCD修复Ubuntu的GRUB","tags":[],"categories":["教程"],"author":"Huffer","excerpt":"\n捣鼓往移动硬盘里装系统的时候一不小心把系统引导搞丢了，导致一开机就进了Grub的命令行界面，而不是正常的选系统界面。这个时候我的系统已经装在硬盘里了，只不过引导出了问题，所以可以在Grub的命令行界面手动引导系统。\n\n","link":"/posts/myNotes/guide/repair-linux-grub"},{"title":"在VSCode中使用Git管理项目","tags":[],"categories":["编程工具"],"author":"Huffer","excerpt":"\n最近大量的代码都是用vscode写的，不管是单片机还是FPGA或者是matlab，虽然各自有各自的IDE，但是写代码还是VSCode好用。\nvscode中的GitLens拓展给VSCode增加了很多Git操作，该文主要记录一些VSCode中常用的Git指令\n\n","link":"/posts/myNotes/guide/use-git-in-vscode"},{"title":"解决 [Vivado 12-8300] Launch HLS failed! Please see vitis_hls.log for details.","tags":[],"categories":["教程"],"author":"Huffer","excerpt":"\n\n## 传送门\n\n[《导出 IP 无效，实参/版本号溢出问题 (Y2K22)》](https://adaptivesupport.amd.com/s/article/76960?language=z","link":"/posts/myNotes/guide/vivado_error_%5BVivado_12-8300%5D"},{"title":"GD32移植FreeRTOS","tags":[],"categories":["单片机"],"author":"Huffer","excerpt":"\n## 模板\n\n[GD32_FreeRTOS_templete](https://github.com/Huffer342-WSH/GD32_FreeRTOS_templete)\n\n## 下载源码\nF","link":"/posts/myNotes/mcu/Port-freertos-to-gd32"},{"title":"Capon算法（MVDR 波束形成器）原理与简单仿真","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"\n\nCapon算法，也称为最小方差无失真响应（Minimum Variance Distortionless Response, MVDR）波束形成器。Capon算法的主要目标是通过调整阵列天线的加权系数，使得在期望信号方向上保持无失真响应，同时最小化来自其他方向的干扰和噪声能量。\n\n","link":"/posts/myNotes/radar/Capon-algorithm"},{"title":"比较相位差法和Capon算法在1发2收雷达系统下的差别","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"\n对于多通道的雷达，可以通过波束成型或者是一些基于子空间的方法实现多目标分类和高分辨率测角。但是当雷达只有两个通道的时候，直觉上就感觉这些DOA算法都会退化到和相位差法一样。\n\n就像一元线性回归的时候","link":"/posts/myNotes/radar/Compare_Capon_and_PhaseDiff_algorithm_in_1T2R_Radar"},{"title":"数据关联-全局最近邻","tags":[],"categories":[],"author":"Huffer","excerpt":"\n\n在多目标跟踪中，数据关联是指将最新的检测结果和被跟踪目标的预测状态关联起来。全局最近邻算法可以说是有用的算法里最简单的。\n\n全局最近邻算法的核心思想是全局优化，通过考虑所有的观测和候选目标，找到一","link":"/posts/myNotes/radar/Data_Association-Global_Nearest_Neighbor"},{"title":"LFMCM雷达工作原理","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"调频连续波(Frequency Modulated Continuous Wave)雷达在交通领域、室内定位等一些民用领域应用较多。线性调频连续波（LFMCW，Linear Frequency Mod","link":"/posts/myNotes/radar/LFMCW-radar-principle"},{"title":"MUSIC算法","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"\nMUSIC算法是一种基于子空间分解的频谱方法，通过对信号子空间进行分析，能够准确地估计出多个信号的到达方向。\n","link":"/posts/myNotes/radar/MUSIC-algorithm"},{"title":"论文阅读——初步学习基于雷达的生命体征监测（呼吸、心跳检测）","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"\n我先找到了这篇2023年的论文[[1]《Noncontact Cardiac Activity Detection Based on Single-Channel ISM Band FMCW Rad","link":"/posts/myNotes/radar/Paper-Reading_FMCW_Radar_Heartbeat_detection"},{"title":"到达矢量 (Arrival vector)","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"\n在阵列信号处理中，常常使用到达矢量来描述同一个信号被不同天线接收到时的差距——时间差、相位差。波束形成和波达方向估计都需要用到达矢量。\n","link":"/posts/myNotes/radar/arrival-vector"},{"title":"对比numpy.arange 和 numpy.linspace","tags":[],"categories":["细枝末节"],"author":"Huffer","excerpt":"\n我写的一个用来生成雷达仿真信号的函数中偶然出现了数组运算时大小不匹配的问题，最后排查到是np.arange的问题。np.arange在步长是浮点数，且终点时步长的整数倍时，有时会因为浮点数的精度问题","link":"/posts/myNotes/some-details/compare_numpy_arange_and_linspace"},{"title":"VSCode中按照文件名查找文件","tags":[],"categories":["细枝末节"],"author":"Huffer","excerpt":"\n<div style=\"text-align: center;\">\n  <img src=\"./assets/list_find_in_vscode.png\" alt=\"description\" s","link":"/posts/myNotes/some-details/list_find_in_vscode"},{"title":"GNU-Radio中ZMQ模块的Pass-Tags","tags":[],"categories":["细枝末节"],"author":"Huffer","excerpt":"\nGNU-Radio中可以用ZMQ模块实时输数据给其他程序，相比UDP模块更加稳定。\n\n![alt text](./assets/ZMQ-PUB-Sink-Block-in-GNURadio.png)","link":"/posts/myNotes/some-details/the-format-of-the-Passtags-of-the-ZMQ-module-in-GNURadio"},{"title":"matlab 中的转置","tags":[],"categories":["细枝末节"],"author":"Huffer","excerpt":"\n再一次通过fft计算列向量频谱时，遇到了频谱非0部分关于中心翻转了的现象，经过排查后才发现是共轭转置导致的。\n\n常用的转置符号```'```，其实是共轭转置。由于我时域共轭了，导致频域中心对称翻转共","link":"/posts/myNotes/some-details/transpose-in-matlab"},{"title":"将markdown文件中的图片转化为webp","tags":[],"categories":[],"author":"Huffer","excerpt":"\n为了加快网页加载速度，想把博客中的图片压缩成webp格式的。所以写了一个python脚本用来压缩并替换markdown文件中引用的图片。\n\n脚本的GitHub地址：[convert_images_t","link":"/posts/myNotes/tools/Convert_images_in_markdown_files_to_webp"},{"title":"python脚本批量修改文本文件的编码格式","tags":[],"categories":["工具"],"author":"Huffer","excerpt":"\n狗屎vivado自带的文本编辑器不能改编码格式，而且linux里是utf-8，在中文的windows下面是gbk。\n\n脚本内容如下：\n[change_encoding.py](https://raw","link":"/posts/myNotes/tools/Python_scripts_modify_the_encoding_format_of_text_files_in_batches"},{"title":"petalinux设计流程","tags":[],"categories":["ZYNQ笔记"],"author":"Huffer","excerpt":"\n\n## 1. 激活环境\n\n在petalinux的安装目录下有一个`setting.sh`脚本用于激活环境\n```shell\nsource <petalinux安装路径>/setting.sh\n```","link":"/posts/myNotes/zynq/Petalinux_design_process"},{"title":"petalinux在配置rootfs时添加lrzsz","tags":[],"categories":["ZYNQ笔记"],"author":"Huffer","excerpt":"\n开发板在没有网的情况下就只能用串口传文件了，因为串口是用来与终端通信了，所以可以用lrzsz来传文件。\n\npetalinux在制作rootfs时可以添加很多软件，做出来的镜像启动后就能直接用这些程序","link":"/posts/myNotes/zynq/add_lrzsz_in_rootfs"},{"title":"LFMCW毫米波雷达接收信号仿真","tags":[],"categories":["信号处理算法"],"author":"Huffer","excerpt":"\n\n最近开始学毫米波雷达测角，先写了两个LFMCW雷达接收信号仿真的matlab函数：\n- [lfmcw_signal_generator.m](https://github.com/Huffer34","link":"/posts/myNotes/radar/project/doc/1_LFMCW-radar-receiving-signal-simulation"}]
