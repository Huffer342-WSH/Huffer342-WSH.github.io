import{_ as h}from"./ValaxyMain.vue_vue_type_style_index_0_lang.45YYFxBa.js";import{f as m,a as F}from"./chunks/vue-router.aOcOW5FA.js";import{A as u,M as y,a3 as e,u as b,N as C,U as a,S as i,R as f,W as s}from"./framework.CrQDr1gD.js";import"./app.BysTI9HO.js";import"./chunks/dayjs.Byk5cVHE.js";import"./chunks/vue-i18n.KUtIpHG9.js";import"./chunks/pinia.HY29yXn_.js";import"./chunks/@vueuse/motion.CRM0IDQD.js";import"./chunks/nprogress.Cino7761.js";import"./YunComment.vue_vue_type_style_index_0_lang.BF_gtew7.js";import"./index.C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.BK-sBKTS.js";import"./post.B3t-mDxK.js";const v="/assets/Screenshot-of-git-commit-in-vscode.fCtDCNDI.png",B="/assets/Initialize-Repository.BlEQbRXI.png",E="/assets/git-log-init.zoXSqrOc.png",x="/assets/git-folder.C2hzZane.png",S="/assets/git-publish.BPppxRPj.png",A="/assets/git-publish-to-github-pannel.NEU9Me1N.png",V="/assets/git-stage.Ci5VdKcl.png",z="/assets/git-unstage.er3j2afl.png",P="/assets/git-commit-message.C18awZfa.png",G="/assets/git-create-branch.f7X1zX9r.png",D="/assets/git-chose-ref-branch.C5As-V52.png",L="/assets/git-provide-new-name-for-branch.B1fd7F4z.png",N="/assets/git-create-branch-result.DDAUqLbw.png",$="/assets/git-check-out-branch.CKP6F0HA.png",w="/assets/git-featA-new-func.CMLZeGe0.png",R="/assets/git-merge-1.BApLAfyV.png",M="/assets/git-merge_2.CTYZmpqr.png",O="/assets/git-merge-3.oEJT6MjQ.png",q="/assets/git-UserB-fetch.BVX-Kwht.png",I="/assets/git-pull-conflicts.Ks5rkNIl.png",U="/assets/git-pull-merge-1.D1EL80qn.png",T="/assets/git-pull-merge-2.Cafo3BWP.png",H="/assets/git-graph-1.DaMASsOt.png",j="/assets/main.py-1.t9gM2ekR.png",W="/assets/git-merge-4.Ba-gPsIh.png",X="/assets/git-rebase-0.DPjaqnAE.png",Y="/assets/git-rebase-1.MWs4i8cy.png",K="/assets/git-rebase-3.BOT6hlSi.png",Z="/assets/git-merge-5.CRpbAEBO.png",J="/assets/git-rebase-brefore-merge.ppS8HtYV.png",Q=m("/posts/myNotes/guide/use-git-in-vscode",async r=>JSON.parse('{"title":"在VSCode中使用Git管理项目","description":"","frontmatter":{"layout":"post","title":"在VSCode中使用Git管理项目","date":"2024-06-29 18:10:00","excerpt_type":"html","categories":["编程工具"]},"headers":[{"level":2,"title":"0 概述","slug":"_0-概述","link":"#_0-概述","children":[]},{"level":2,"title":"1 .gitignore文件","slug":"_1-gitignore文件","link":"#_1-gitignore文件","children":[]},{"level":2,"title":"2 日常开发常用的Git操作","slug":"_2-日常开发常用的git操作","link":"#_2-日常开发常用的git操作","children":[{"level":3,"title":"2.1 设置网络代理","slug":"_2-1-设置网络代理","link":"#_2-1-设置网络代理","children":[]},{"level":3,"title":"2.2 设置用户名和密码","slug":"_2-2-设置用户名和密码","link":"#_2-2-设置用户名和密码","children":[]},{"level":3,"title":"2.3 设置autolf","slug":"_2-3-设置autolf","link":"#_2-3-设置autolf","children":[]},{"level":3,"title":"2.4 初始化本地仓库","slug":"_2-4-初始化本地仓库","link":"#_2-4-初始化本地仓库","children":[]},{"level":3,"title":"2.5 发布到github","slug":"_2-5-发布到github","link":"#_2-5-发布到github","children":[]},{"level":3,"title":"2.6 暂存、提交文件","slug":"_2-6-暂存、提交文件","link":"#_2-6-暂存、提交文件","children":[]},{"level":3,"title":"2.7 新建分支（派生分支）","slug":"_2-7-新建分支-派生分支","link":"#_2-7-新建分支-派生分支","children":[]},{"level":3,"title":"2.8 切换分支","slug":"_2-8-切换分支","link":"#_2-8-切换分支","children":[]},{"level":3,"title":"2.9 在新分支开发并合并分支","slug":"_2-9-在新分支开发并合并分支","link":"#_2-9-在新分支开发并合并分支","children":[]},{"level":3,"title":"2.10 为什么不建议使用rebase把私人分支的提交合并到公共分支上","slug":"_2-10-为什么不建议使用rebase把私人分支的提交合并到公共分支上","link":"#_2-10-为什么不建议使用rebase把私人分支的提交合并到公共分支上","children":[]}]}],"relativePath":"pages/posts/myNotes/guide/use-git-in-vscode.md","lastUpdated":null}'),{lazy:(r,o)=>r.name===o.name}),ui={__name:"use-git-in-vscode",setup(r,{expose:o}){var p;const{data:g}=Q(),d=F(),n=Object.assign(d.meta.frontmatter||{},((p=g.value)==null?void 0:p.frontmatter)||{});return d.meta.frontmatter=n,u("pageData",g.value),u("valaxy:frontmatter",n),globalThis.$frontmatter=n,o({frontmatter:{layout:"post",title:"在VSCode中使用Git管理项目",date:"2024-06-29 18:10:00",excerpt_type:"html",categories:["编程工具"]}}),(t,l)=>{const k=h;return C(),y(k,{frontmatter:b(n)},{"main-content-md":e(()=>[l[0]||(l[0]=i("p",null,"最近大量的代码都是用vscode写的，不管是单片机还是FPGA或者是matlab，虽然各自有各自的IDE，但是写代码还是VSCode好用。 vscode中的GitLens拓展给VSCode增加了很多Git操作，该文主要记录一些VSCode中常用的Git指令",-1)),f(" more "),l[1]||(l[1]=i("h2",{id:"_0-概述",tabindex:"-1"},[s("0 概述 "),i("a",{class:"header-anchor",href:"#_0-概述","aria-label":'Permalink to "0 概述"'},"​")],-1)),l[2]||(l[2]=i("ol",null,[i("li",null,"使用.gitignore文件忽略不需要存入仓库的文件"),i("li",null,"提交时使用统一的规范"),i("li",null,[s("项目包含产品分支main、开发分支develop、发布分支release(可选)以及功能分支FeatureA、FeatureB…和热修复分支HotfixA、HotfixB… "),i("ol",null,[i("li",null,"main分支是产品分支，里面只存稳定版"),i("li",null,"develop分支是开发分支，所有人开发人员的代码都先合并到这个分支"),i("li",null,"FeatureA、FeatureB…分支是功能分支，开发一个新功能时从develop分支签出，开发完成后合并到develop分支")])]),i("li",null,"在私人分支开发代码时，使用rebase来合并代码，保证历史记录清晰"),i("li",null,[s("将私人分支合并到公共分支时使用"),i("code",null,"merge"),s("，避免已有的提交哈希值发生变化")])],-1)),l[3]||(l[3]=i("h2",{id:"_1-gitignore文件",tabindex:"-1"},[s("1 .gitignore文件 "),i("a",{class:"header-anchor",href:"#_1-gitignore文件","aria-label":'Permalink to "1 .gitignore文件"'},"​")],-1)),l[4]||(l[4]=i("p",null,[i("code",null,".gitignore"),s(" 文件在 Git 项目中用于指定哪些文件和目录应该被 Git 忽略，不纳入版本控制。比如忽略编译的时候产生的 "),i("code",null,"build"),s(" 文件夹或者是一些日志。")],-1)),l[5]||(l[5]=i("p",null,[i("a",{href:"https://git-scm.com/docs/gitignore/zh_HANS-CN",target:"_blank",rel:"noreferrer"},"https://git-scm.com/docs/gitignore/zh_HANS-CN"),s("，这是官网的文档。")],-1)),l[6]||(l[6]=i("p",null,[s("在 "),i("a",{href:"https://github.com/github/gitignore",target:"_blank",rel:"noreferrer"},"gitignore@github"),s(" 这仓库里收集了很多gitignore模板，主要针对各种IDE。")],-1)),l[7]||(l[7]=i("h2",{id:"_2-日常开发常用的git操作",tabindex:"-1"},[s("2 日常开发常用的Git操作 "),i("a",{class:"header-anchor",href:"#_2-日常开发常用的git操作","aria-label":'Permalink to "2 日常开发常用的Git操作"'},"​")],-1)),l[8]||(l[8]=i("h3",{id:"_2-1-设置网络代理",tabindex:"-1"},[s("2.1 设置网络代理 "),i("a",{class:"header-anchor",href:"#_2-1-设置网络代理","aria-label":'Permalink to "2.1 设置网络代理"'},"​")],-1)),l[9]||(l[9]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," http.proxy"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," http://username:password@proxy.server:port")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," https.proxy"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," https://username:password@proxy.server:port")])])]),i("button",{class:"collapse"})],-1)),l[10]||(l[10]=i("p",null,"例如",-1)),l[11]||(l[11]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," http.proxy"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," http://127.0.0.1:7890")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," https.proxy"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," https://127.0.0.1:7890")])])]),i("button",{class:"collapse"})],-1)),l[12]||(l[12]=i("h3",{id:"_2-2-设置用户名和密码",tabindex:"-1"},[s("2.2 设置用户名和密码 "),i("a",{class:"header-anchor",href:"#_2-2-设置用户名和密码","aria-label":'Permalink to "2.2 设置用户名和密码"'},"​")],-1)),l[13]||(l[13]=i("p",null,"Git 需要用户名和邮箱来标识每个提交的作者信息。一般来说配置一个全局的用户名和邮箱就可以了。",-1)),l[14]||(l[14]=i("p",null,[i("strong",null,"全局配置")],-1)),l[15]||(l[15]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.name"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Your Name"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.email"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "your.email@example.com"')])])]),i("button",{class:"collapse"})],-1)),l[16]||(l[16]=i("p",null,[i("strong",null,"获取全局配置")],-1)),l[17]||(l[17]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.name")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.email")])])]),i("button",{class:"collapse"})],-1)),l[18]||(l[18]=i("p",null,[i("strong",null,"单个仓库配置")],-1)),l[19]||(l[19]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.name"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Your Name"')]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.email"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "your.email@example.com"')])])]),i("button",{class:"collapse"})],-1)),l[20]||(l[20]=i("p",null,[i("strong",null,"获取单个仓库的配置")],-1)),l[21]||(l[21]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.name")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," user.email")])])]),i("button",{class:"collapse"})],-1)),l[22]||(l[22]=i("p",null,[i("strong",null,"设置VSCode中Git Commit记录中的头像")],-1)),l[23]||(l[23]=i("p",null,[s("VSCode是根据commit的邮箱，从"),i("a",{href:"https://gravatar.com/",target:"_blank",rel:"noreferrer"},"https://gravatar.com/"),s("中找的头像。只需要用同一个邮箱在"),i("a",{href:"https://gravatar.com/",target:"_blank",rel:"noreferrer"},"gravatar"),s("注册一个账号，提交头像就可以了 "),i("img",{src:v,alt:"alt text"})],-1)),l[24]||(l[24]=i("h3",{id:"_2-3-设置autolf",tabindex:"-1"},[s("2.3 设置autolf "),i("a",{class:"header-anchor",href:"#_2-3-设置autolf","aria-label":'Permalink to "2.3 设置autolf"'},"​")],-1)),l[25]||(l[25]=i("p",null,"windows下换行为CRLF，类Unix系统均为LF。我们希望git仓库中保存的文件都是统一的LF换行。",-1)),l[26]||(l[26]=i("hr",null,null,-1)),l[27]||(l[27]=i("p",null,[i("strong",null,"Windows 用户："),s(" 打开 Git Bash 或命令行，执行以下命令，使得 Git 在检出时将行尾符转换为 CRLF，在提交时转换为 LF：")],-1)),l[28]||(l[28]=i("div",{style:{"max-height":"500px"},class:"language-bash vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"bash"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," core.autocrlf"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," true")])])]),i("button",{class:"collapse"})],-1)),l[29]||(l[29]=i("hr",null,null,-1)),l[30]||(l[30]=i("p",null,[i("strong",null,"Linux 用户："),s(" 在终端执行以下命令，使得 Git 在检出和提交时保持 LF 不变：")],-1)),l[31]||(l[31]=i("div",{style:{"max-height":"500px"},class:"language-bash vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"bash"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," config"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --global"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," core.autocrlf"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," input")])])]),i("button",{class:"collapse"})],-1)),l[32]||(l[32]=i("hr",null,null,-1)),l[33]||(l[33]=i("p",null,"这样设置后，Windows 用户在检出文件时会看到 CRLF 行尾符，而 Linux 用户会看到 LF 行尾符。在提交到仓库时，所有行尾符都将被统一为 LF，从而避免行尾符混乱的问题。",-1)),l[34]||(l[34]=i("h3",{id:"_2-4-初始化本地仓库",tabindex:"-1"},[s("2.4 初始化本地仓库 "),i("a",{class:"header-anchor",href:"#_2-4-初始化本地仓库","aria-label":'Permalink to "2.4 初始化本地仓库"'},"​")],-1)),l[35]||(l[35]=i("p",null,[s("打开工程根目录，点击"),i("code",null,"Initialize Repository"),s("初始化仓库 "),i("img",{src:B,alt:"VSCode仓库初始化"})],-1)),l[36]||(l[36]=i("p",null,"可以看到在git日志中使用了",-1)),l[37]||(l[37]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," init"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -b"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," main")])])]),i("button",{class:"collapse"})],-1)),l[38]||(l[38]=i("p",null,[s("意思是初始化一个新的 Git 仓库，并将默认分支名称设置为 "),i("code",null,"main"),s("。 "),i("img",{src:E,alt:"VSCode git 初始化日志"})],-1)),l[39]||(l[39]=i("p",null,[s("初始化仓库工程根目录新增一个隐藏的"),i("code",null,".git"),s("文件夹。 "),i("img",{src:x,alt:"git文件夹"})],-1)),l[40]||(l[40]=i("h3",{id:"_2-5-发布到github",tabindex:"-1"},[s("2.5 发布到github "),i("a",{class:"header-anchor",href:"#_2-5-发布到github","aria-label":'Permalink to "2.5 发布到github"'},"​")],-1)),l[41]||(l[41]=i("p",null,[s("VSCode中可以一键提交到Github，点底部状态栏的☁图标就行了。或者在命令面板搜索"),i("code",null,"publish to github")],-1)),l[42]||(l[42]=i("figure",null,[i("img",{src:S,alt:"发布到github",loading:"lazy",decoding:"async"})],-1)),l[43]||(l[43]=i("p",null,"发布的时候可以设置仓库的名字，默认时当前文件夹的名字，还可以选择私有还是公共。",-1)),l[44]||(l[44]=i("figure",null,[i("img",{src:A,alt:"发布到Github时设置信息",loading:"lazy",decoding:"async"})],-1)),l[45]||(l[45]=i("h3",{id:"_2-6-暂存、提交文件",tabindex:"-1"},[s("2.6 暂存、提交文件 "),i("a",{class:"header-anchor",href:"#_2-6-暂存、提交文件","aria-label":'Permalink to "2.6 暂存、提交文件"'},"​")],-1)),l[46]||(l[46]=i("p",null,[i("code",null,"git add"),s(" 命令用于将文件的更改添加到暂存区（staging area）; "),i("code",null,"git commit"),s(" 命令用于将暂存区的更改记录到本地仓库。")],-1)),l[47]||(l[47]=i("p",null,"对应的指令如下：",-1)),l[48]||(l[48]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," add"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"filenam"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"e"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," #暂存一个文件")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," add"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"director"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," #暂存一个文件夹")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," commit"),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -m"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Your commit message"'),i("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," #将暂存区中的文件提交，并带有提交信息")])])]),i("button",{class:"collapse"})],-1)),l[49]||(l[49]=i("p",null,[s("在VScode中的"),i("code",null,"'SOURCE CONTRIL' > 'Changes'"),s("面板中可以暂存想要的文件或者文件夹，暂存后会显示在"),i("code",null,"'Staged Changes'"),s("面板中。 "),i("img",{src:V,alt:"Git Stage in VSCode"})],-1)),l[50]||(l[50]=i("figure",null,[i("img",{src:z,alt:"Git Staged in VSCode",loading:"lazy",decoding:"async"})],-1)),l[51]||(l[51]=i("p",null,[s("暂存后的文件就可以提交了。在点"),i("code",null,"Commit"),s("按钮前输入Message了的话，点击时就直接提交了。假如Message是空白的，就会自动打开一个新的文件来输入Message。")],-1)),l[52]||(l[52]=i("figure",null,[i("img",{src:P,alt:"git commit message in VSCode",loading:"lazy",decoding:"async"})],-1)),l[53]||(l[53]=i("p",null,[s("合作时提交信息要遵循一致的规范，参考"),i("a",{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noreferrer"},"约定式提交 1.0.0"),s("。")],-1)),l[54]||(l[54]=i("p",null,"我实验室项目之前的代码的提交属于是有一点点规范。之后多人合作时得统一规范了。",-1)),l[55]||(l[55]=i("h3",{id:"_2-7-新建分支-派生分支",tabindex:"-1"},[s("2.7 新建分支（派生分支） "),i("a",{class:"header-anchor",href:"#_2-7-新建分支-派生分支","aria-label":'Permalink to "2.7 新建分支（派生分支）"'},"​")],-1)),l[56]||(l[56]=i("p",null,"分支功能方便多个人共同开发，每个人再自己的分支中独立开发，然后合并到公共分支（最好不要一起改一个文件，要不然要解决冲突）。",-1)),l[57]||(l[57]=i("p",null,[s("单人开发的时候其实一两个分支就够用了，我以前都只用 "),i("code",null,"main"),s(" 分支和一个"),i("code",null,"develop"),s("分支，平常再"),i("code",null,"develop"),s("分支里写代码，有稳定版本了就"),i("code",null,"git merge --squash"),s("到"),i("code",null,"main"),s("分支。不过多人合作的时候就该每个人都现在自己的分支上写代码，然后"),i("code",null,"merge"),s("到公共分支了。")],-1)),l[58]||(l[58]=i("blockquote",null,[i("p",null,"有一说一，实验室也不会有多少个人参加到同一个项目里，写代码的人更是少。而且写代码也会分开写，有人写matlab，有人写C语言。可能直接发文件合并代码比用git效率更高。不过练练git也没有坏处，再说项目进度慢一点急的也不是我。")],-1)),l[59]||(l[59]=i("p",null,"Git新建分支可以从一个已有的分支为基点分叉出一个新的分支（一般都是从已有分支的最新提交作为基点）。 装了GitLens拓展后VSCode里有好几个地方都能找到新建分支按钮，这里贴个VSCode默认就有的：",-1)),l[60]||(l[60]=i("figure",null,[i("img",{src:G,alt:"git create branch",loading:"lazy",decoding:"async"})],-1)),l[61]||(l[61]=i("p",null,"VSCode命令栏里也能找到（Ctrl+Shift+P 打开命令栏）",-1)),l[62]||(l[62]=i("p",null,"![VSCode命令栏中的git create branch](…/assets/use-git-in-vscode者选择指令后，先选择一个已有的分支作为基础。",-1)),l[63]||(l[63]=i("figure",null,[i("img",{src:D,alt:"选择已有分支",loading:"lazy",decoding:"async"})],-1)),l[64]||(l[64]=i("p",null,[s("然后需要输入新分支的名字，这里先新建一个"),i("code",null,"develop"),s("分支 "),i("img",{src:L,alt:"设置新分支的名字"})],-1)),l[65]||(l[65]=i("p",null,[s("新建后就可以在底部状态栏和左侧栏中看到新建的分支了。 "),i("img",{src:N,alt:"vscode中查看分支"})],-1)),l[66]||(l[66]=i("h3",{id:"_2-8-切换分支",tabindex:"-1"},[s("2.8 切换分支 "),i("a",{class:"header-anchor",href:"#_2-8-切换分支","aria-label":'Permalink to "2.8 切换分支"'},"​")],-1)),l[67]||(l[67]=i("p",null,[i("code",null,"git checkout"),s("指令用于切换到一个已有的分支。")],-1)),l[68]||(l[68]=i("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[i("button",{title:"Copy Code",class:"copy"}),i("span",{class:"lang"},"shell"),i("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[i("code",{"v-pre":""},[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"git"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," checkout"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),i("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"branch-nam"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"e"),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")])])]),i("button",{class:"collapse"})],-1)),l[69]||(l[69]=i("p",null,"在VSCode中，底部状态栏中显示当前分支的名字，点击就可以切换分支或者新建分支。",-1)),l[70]||(l[70]=i("figure",null,[i("img",{src:$,alt:"VSCode git切换分支",loading:"lazy",decoding:"async"})],-1)),l[71]||(l[71]=i("h3",{id:"_2-9-在新分支开发并合并分支",tabindex:"-1"},[s("2.9 在新分支开发并合并分支 "),i("a",{class:"header-anchor",href:"#_2-9-在新分支开发并合并分支","aria-label":'Permalink to "2.9 在新分支开发并合并分支"'},"​")],-1)),l[72]||(l[72]=i("h4",{id:"_2-9-1-用户a开发功能",tabindex:"-1"},[s("2.9.1 用户A开发功能 "),i("a",{class:"header-anchor",href:"#_2-9-1-用户a开发功能","aria-label":'Permalink to "2.9.1 用户A开发功能"'},"​")],-1)),l[73]||(l[73]=i("p",null,[s("首先用户A新建并切换到新的分支’feature/A’，写两个函数"),i("code",null,"sum()"),s("和"),i("code",null,"sub()"),s("并提交。")],-1)),l[74]||(l[74]=i("figure",null,[i("img",{src:w,alt:"在新分支中写函数",loading:"lazy",decoding:"async"})],-1)),l[75]||(l[75]=i("p",null,[s("提交完之后用户A自己合并分支。合并分支有两中方式："),i("code",null,"git merge"),s("和"),i("code",null,"git rebase"),s("。这里先演示"),i("code",null,"merge"),s("。")],-1)),l[76]||(l[76]=i("blockquote",null,[i("p",null,"毕竟merge的中文就是’v.结合’，设计出来就是合并用的。 而rebase的中文是’变基’，相当于把新分支上新的提交挪到了老分支上。")],-1)),l[77]||(l[77]=i("ol",null,[i("li",null,[i("p",null,[s("首先切换到合并到的分支，比如想要将"),i("code",null,"feature/A"),s("合并到"),i("code",null,"develop"),s("分支，就切换到"),i("code",null,"develop"),s("分支。")])]),i("li",null,[i("p",null,[s("从"),i("code",null,"'SOURCE CONTROL'"),s("面板的菜单中找到。或者在命令面板中搜索"),i("code",null,"merge"),s("，可以搜到GitLens和Git提供的"),i("code",null,"merge"),s("指令，两个大差不差。")])])],-1)),l[78]||(l[78]=i("figure",null,[i("img",{src:R,alt:"VSCode merge按钮",loading:"lazy",decoding:"async"})],-1)),l[79]||(l[79]=i("ol",{start:"3"},[i("li",null,[s("选择要合并的分支，这里选择"),i("code",null,"feature/A"),s("。")])],-1)),l[80]||(l[80]=i("figure",null,[i("img",{src:M,alt:"VSCode merge 选择分支",loading:"lazy",decoding:"async"})],-1)),l[81]||(l[81]=i("p",null,[s("然后就会看到当前分支里多了"),i("code",null,"feature/A"),s("分支的提交。")],-1)),l[82]||(l[82]=i("figure",null,[i("img",{src:O,alt:"git merge 结果",loading:"lazy",decoding:"async"})],-1)),l[83]||(l[83]=i("h4",{id:"_2-9-2-用户b拉取develop分支并解决冲突",tabindex:"-1"},[s("2.9.2 用户B拉取develop分支并解决冲突 "),i("a",{class:"header-anchor",href:"#_2-9-2-用户b拉取develop分支并解决冲突","aria-label":'Permalink to "2.9.2 用户B拉取develop分支并解决冲突"'},"​")],-1)),l[84]||(l[84]=i("p",null,[s("用户A把刚才的改动分支推到Github后，用户B打开VSCode的时候就会看到"),i("code",null,"develop"),s("红了。可以选择fetch或者pull下载改动。 "),i("img",{src:q,alt:"用户B VSCode界面看到分支变化"})],-1)),l[85]||(l[85]=i("p",null,[s("这边用户B先在develop分支提交两个commit"),i("code",null,"sum()"),s("和"),i("code",null,"multiply()"),s("，制造冲突。此时远程分支和本地分支存在冲突。在VSCode中点击"),i("code",null,"Pull"),s("后会提示存在冲突。")],-1)),l[86]||(l[86]=i("figure",null,[i("img",{src:I,alt:"VSCode 拉去冲突",loading:"lazy",decoding:"async"})],-1)),l[87]||(l[87]=i("p",null,[s("Pull后可以看到sum.py和sub.py都已经拉取下来了。观察左侧边栏可以看到存在冲突的sum.py在"),i("code",null,"Merge Changes"),s("面板中，没有冲突的sub.py则已经在暂存区了。")],-1)),l[88]||(l[88]=i("p",null,[s("VScode会打开一个合并管理器，两个分支里二选一解决冲突，当然也可以再添加一些改动。修改完成后点击"),i("code",null,"Complete Merge"),s("按钮就可以了。")],-1)),l[89]||(l[89]=i("figure",null,[i("img",{src:U,alt:"VSCode拉取冲突 缓存区",loading:"lazy",decoding:"async"})],-1)),l[90]||(l[90]=i("figure",null,[i("img",{src:T,alt:"VSCode拉取冲突 解决冲突",loading:"lazy",decoding:"async"})],-1)),l[91]||(l[91]=i("figure",null,[i("img",{src:H,alt:"VSCode git graph",loading:"lazy",decoding:"async"})],-1)),l[92]||(l[92]=i("h4",{id:"_2-9-3-用户b再feature-b分支上开发-a更新了develop分支-用户b拉取develop分支并解决冲突",tabindex:"-1"},[s("2.9.3 用户B再feature/B分支上开发，A更新了develop分支，用户B拉取develop分支并解决冲突 "),i("a",{class:"header-anchor",href:"#_2-9-3-用户b再feature-b分支上开发-a更新了develop分支-用户b拉取develop分支并解决冲突","aria-label":'Permalink to "2.9.3 用户B再feature/B分支上开发，A更新了develop分支，用户B拉取develop分支并解决冲突"'},"​")],-1)),l[93]||(l[93]=i("p",null,[s("用户B新建了自己的"),i("code",null,"feature/B"),s("分支，然后写了"),i("code",null,"main.py"),s("文件,用来将两个列表中的数分别相加。")],-1)),l[94]||(l[94]=i("figure",null,[i("img",{src:j,alt:"main.py",loading:"lazy",decoding:"async"})],-1)),l[95]||(l[95]=i("p",null,[s("用户B刚准备把这个合并到develop分支时，发现用户A很体贴的给他准备了一个新的"),i("code",null,"sum()"),s("函数,可以直接输入两个列表并求和。那么用户B该怎么才能用上最新的功能呢？ 和之前合并分支一样有两种选择"),i("code",null,"merge"),s("和"),i("code",null,"rebase"),s("：")],-1)),l[96]||(l[96]=i("ul",null,[i("li",null,[s("merge：用户B先更新develop分支，切换到feature/B分后"),i("code",null,"git merge develop"),s("将develop的新提交合并到feature/B分支。")]),i("li",null,"rebase：用户B先更新develop分支，")],-1)),l[97]||(l[97]=i("h5",{id:"merge",tabindex:"-1"},[s("merge "),i("a",{class:"header-anchor",href:"#merge","aria-label":'Permalink to "merge"'},"​")],-1)),l[98]||(l[98]=i("p",null,"merge的过程和上文中的一样，下图是merge并提交了新的代码后的结果。",-1)),l[99]||(l[99]=i("p",null,[s("用户B再写main.py的过程中发现用户A还在sum()函数里留了个bug，用户A在用户B合并分支前又在develop分支提交了新的sub()函数，不过用户B暂时不需要这个函数，所以就没有再次把develop分支上的东西合并到子的"),i("code",null,"feature/B"),s("分支上。可以看到使用merge合并分支的话，可以保留提交的顺序。不过在开发的过程中各个分支又相关功能的变动还是要尽量避免的。")],-1)),l[100]||(l[100]=i("figure",null,[i("img",{src:W,alt:"VSCode Merge结果",loading:"lazy",decoding:"async"})],-1)),l[101]||(l[101]=i("h5",{id:"rebase",tabindex:"-1"},[s("rebase "),i("a",{class:"header-anchor",href:"#rebase","aria-label":'Permalink to "rebase"'},"​")],-1)),l[102]||(l[102]=i("p",null,[s("下面主要展示rebase。因为这里的需求是将公共分支的修改应用到用户B自己的分支上，使用rebase并不会影响其他人。使用rebase相当于改变了这个分支的起点，让"),i("code",null,"feature/B"),s("变成从"),i("code",null,"develop"),s("最新的提交上派生出来。")],-1)),l[103]||(l[103]=i("p",null,[s("下文是rebase前的状态，用户B刚写完main.py， 用户A就在把新的sum()函数合并到develop分支上了。这个时候用户B就可以使用rebase让自己的分支变成从最新的develop分支派生出来。 "),i("img",{src:X,alt:"rebase前的状态"})],-1)),l[104]||(l[104]=i("figure",null,[i("img",{src:Y,alt:"VSCode rebase",loading:"lazy",decoding:"async"})],-1)),l[105]||(l[105]=i("figure",null,[i("img",{src:K,alt:"选择新基点",loading:"lazy",decoding:"async"})],-1)),l[106]||(l[106]=i("p",null,[s("下图是用户B rebase后，开发完新功能并"),i("code",null,"merge"),s("到develop分支后的结果。对比上面使用"),i("code",null,"merge"),s("获取公共分支更新的方式，rebase的流程图更加简洁，不会像蜘蛛网一样，所以在私人分支上更建议使用rebase，")],-1)),l[107]||(l[107]=i("figure",null,[i("img",{src:Z,alt:"使用rebase获取新代码并merge后的结果",loading:"lazy",decoding:"async"})],-1)),l[108]||(l[108]=i("h4",{id:"_2-9-4-在把功能分支合并到公共分支前使用rebase",tabindex:"-1"},[s("2.9.4 在把功能分支合并到公共分支前使用rebase "),i("a",{class:"header-anchor",href:"#_2-9-4-在把功能分支合并到公共分支前使用rebase","aria-label":'Permalink to "2.9.4 在把功能分支合并到公共分支前使用rebase"'},"​")],-1)),l[109]||(l[109]=i("p",null,[s("先将私人分支"),i("code",null,"rebase"),s("到最新的公共分支提交后面，然后再"),i("code",null,"merge"),s("到公共分支，可以使得"),i("code",null,"merge"),s("前各个分支上没有新的提交，使得各个分支的提交历史是串行的。")],-1)),l[110]||(l[110]=i("figure",null,[i("img",{src:J,alt:"再merge前rebase",loading:"lazy",decoding:"async"})],-1)),l[111]||(l[111]=i("blockquote",null,[i("p",null,"到此为止常用的git操作就讲完了，冲突和中途从公共分支合并代码还是比较烦人的，在分配任务的时候要尽量避免这种情况。在合并代码前一定要验证过，不要给别人挖坑。")],-1)),l[112]||(l[112]=i("h3",{id:"_2-10-为什么不建议使用rebase把私人分支的提交合并到公共分支上",tabindex:"-1"},[s("2.10 为什么不建议使用rebase把私人分支的提交合并到公共分支上 "),i("a",{class:"header-anchor",href:"#_2-10-为什么不建议使用rebase把私人分支的提交合并到公共分支上","aria-label":'Permalink to "2.10 为什么不建议使用rebase把私人分支的提交合并到公共分支上"'},"​")],-1)),l[113]||(l[113]=i("p",null,"具体的来说，是不要rebase公共分支中别人已经引用的提交。因为rebase其实是把已有的提交暂存，并在新的基点上重新提交，提交的哈希值会发生变化。一但把rebase过的公共分支发布，在别人的视角里就会出现一模一样的新提交。",-1))]),"main-header":e(()=>[a(t.$slots,"main-header")]),"main-header-after":e(()=>[a(t.$slots,"main-header-after")]),"main-nav":e(()=>[a(t.$slots,"main-nav")]),"main-content-before":e(()=>[a(t.$slots,"main-content-before")]),"main-content":e(()=>[a(t.$slots,"main-content")]),"main-content-after":e(()=>[a(t.$slots,"main-content-after")]),"main-nav-before":e(()=>[a(t.$slots,"main-nav-before")]),"main-nav-after":e(()=>[a(t.$slots,"main-nav-after")]),comment:e(()=>[a(t.$slots,"comment")]),footer:e(()=>[a(t.$slots,"footer")]),aside:e(()=>[a(t.$slots,"aside")]),"aside-custom":e(()=>[a(t.$slots,"aside-custom")]),default:e(()=>[a(t.$slots,"default")]),_:3},8,["frontmatter"])}}};export{ui as default,Q as usePageData};
