import{_ as g}from"./ValaxyMain.vue_vue_type_style_index_0_lang.45YYFxBa.js";import{f as u,a as F}from"./chunks/vue-router.aOcOW5FA.js";import{A as c,M as y,a3 as l,u as m,N as C,U as e,S as s,W as i}from"./framework.CrQDr1gD.js";import"./app.BysTI9HO.js";import"./chunks/dayjs.Byk5cVHE.js";import"./chunks/vue-i18n.KUtIpHG9.js";import"./chunks/pinia.HY29yXn_.js";import"./chunks/@vueuse/motion.CRM0IDQD.js";import"./chunks/nprogress.Cino7761.js";import"./YunComment.vue_vue_type_style_index_0_lang.BF_gtew7.js";import"./index.C5okkQwF.js";import"./YunPageHeader.vue_vue_type_script_setup_true_lang.BK-sBKTS.js";import"./post.B3t-mDxK.js";const E="/assets/ls-l.Cf056zLn.png",b=u("/posts/myNotes/zynq/Petalinux_design_process",async n=>JSON.parse('{"title":"petalinux设计流程","description":"","frontmatter":{"layout":"post","title":"petalinux设计流程","date":"2024-10-04 20:12:43","categories":["ZYNQ笔记"],"excerpt":"简单记录petalinux的设计流程","hide":false},"headers":[{"level":2,"title":"1. 激活环境","slug":"_1-激活环境","link":"#_1-激活环境","children":[]},{"level":2,"title":"2. 创建petalinux工程","slug":"_2-创建petalinux工程","link":"#_2-创建petalinux工程","children":[]},{"level":2,"title":"3. 配置工程","slug":"_3-配置工程","link":"#_3-配置工程","children":[{"level":3,"title":"3.1 获取硬件描述并配置工程","slug":"_3-1-获取硬件描述并配置工程","link":"#_3-1-获取硬件描述并配置工程","children":[]},{"level":3,"title":"3.2 设置本地sstate-cache和BitBake镜像","slug":"_3-2-设置本地sstate-cache和bitbake镜像","link":"#_3-2-设置本地sstate-cache和bitbake镜像","children":[]},{"level":3,"title":"3.3 配置kernel","slug":"_3-3-配置kernel","link":"#_3-3-配置kernel","children":[]},{"level":3,"title":"3.4 配置rootfs","slug":"_3-4-配置rootfs","link":"#_3-4-配置rootfs","children":[]}]},{"level":2,"title":"4. 配置设备树","slug":"_4-配置设备树","link":"#_4-配置设备树","children":[]},{"level":2,"title":"5. 编译工程","slug":"_5-编译工程","link":"#_5-编译工程","children":[]},{"level":2,"title":"6. 打包 BOOT.bin 启动文件","slug":"_6-打包-boot-bin-启动文件","link":"#_6-打包-boot-bin-启动文件","children":[]}],"relativePath":"pages/posts/myNotes/zynq/Petalinux_design_process.md","lastUpdated":null}'),{lazy:(n,h)=>n.name===h.name}),z={__name:"Petalinux_design_process",setup(n,{expose:h}){var o;const{data:k}=b(),p=F(),t=Object.assign(p.meta.frontmatter||{},((o=k.value)==null?void 0:o.frontmatter)||{});return p.meta.frontmatter=t,c("pageData",k.value),c("valaxy:frontmatter",t),globalThis.$frontmatter=t,h({frontmatter:{layout:"post",title:"petalinux设计流程",date:"2024-10-04 20:12:43",categories:["ZYNQ笔记"],excerpt:"简单记录petalinux的设计流程",hide:!1}}),(a,r)=>{const d=g;return C(),y(d,{frontmatter:m(t)},{"main-content-md":l(()=>r[0]||(r[0]=[s("h2",{id:"_1-激活环境",tabindex:"-1"},[i("1. 激活环境 "),s("a",{class:"header-anchor",href:"#_1-激活环境","aria-label":'Permalink to "1. 激活环境"'},"​")],-1),s("p",null,[i("在petalinux的安装目录下有一个"),s("code",null,"setting.sh"),i("脚本用于激活环境")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"source"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"petalinux安装路"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"径"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/setting.sh")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("为了方便管理不同环境，我使用一个"),s("code",null,"actv"),i("函数来激活环境，将一下内容保存到脚本中，如"),s("code",null,"/opt/activate.sh"),i(",然后再"),s("code",null,"~/.bashrc"),i("里面添加如下"),s("code",null,"source /opt/activate.sh"),i(",这样就可以在打开的终端中使用"),s("code",null,"actv"),i("指令了来激活环境了")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 定义 actv 函数")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"actv"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"    arg"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#E36209","--shiki-dark":"#FFAB70"}},"$1")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"    set"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --"),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}}," # 重置shell参数")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    case"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$arg"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," in")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'        "petalinux-2020.2"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"            source"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /opt/Xilinx/petalinux/2020.2/settings.sh")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            ;;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'        "xilinx-2020.2"'),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},")")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"            source"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," /opt/Xilinx/Vivado/2020.2/settings64.sh"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            ;;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        *)")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"            echo"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "Unknown command."')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"            ;;")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    esac")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 定义 actv 的补全选项")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"_actv_completions"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"() {")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"    # 仅在第一个参数时提供补全")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    if"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," [[ $COMP_CWORD "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"-eq"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," 1"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," ]]; "),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"then")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        local"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," cur"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"${COMP_WORDS[COMP_CWORD]}")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"        local"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}}," commands"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"petalinux-2020.2 xilinx-2020.2"')]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        COMPREPLY"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"( $("),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"compgen"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -W"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$commands"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},' "'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"$cur"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},'"'),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},") )")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    else")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"        COMPREPLY"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"="),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"()  "),s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 在后续的参数中不提示任何补全")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"    fi")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"}")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 为 actv 函数启用补全")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"complete"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -F"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," _actv_completions"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," actv")])])]),s("button",{class:"collapse"})],-1),s("h2",{id:"_2-创建petalinux工程",tabindex:"-1"},[i("2. 创建petalinux工程 "),s("a",{class:"header-anchor",href:"#_2-创建petalinux工程","aria-label":'Permalink to "2. 创建petalinux工程"'},"​")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-create"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -t"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," project"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -n"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"PROJEC"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"T"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --template"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"  <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"TEMPLATE:versal"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"zynqMP"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"zynq"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"|"),s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"microblaze"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},">")])])]),s("button",{class:"collapse"})],-1),s("ul",null,[s("li",null,[s("code",null,"<PROJECT>"),i("为工程名，使用指令后会在当前工作路径下创建一个同名文件夹存放工程,")]),s("li",null,[s("code",null,"<TEMPLATE:versal|zynqMP|zynq|microblaze>"),i("为工程模板，按照自己用的器件选择")])],-1),s("p",null,[s("strong",null,"例如")],-1),s("div",{style:{"max-height":"500px"},class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-create"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -t"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," project"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -n"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," demo-zynq7010-petalinux"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --template"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," zynq")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"cd"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," ./demo-zynq7010-petalinux")])])]),s("button",{class:"collapse"})],-1),s("h2",{id:"_3-配置工程",tabindex:"-1"},[i("3. 配置工程 "),s("a",{class:"header-anchor",href:"#_3-配置工程","aria-label":'Permalink to "3. 配置工程"'},"​")],-1),s("p",null,[i("配置工程分三个部分: "),s("code",null,"获取硬件描述"),i("、"),s("code",null,"配置linux内核"),i("、"),s("code",null,"配置rootfs"),i("。 一般因为国内网络问题，还要加一步"),s("code",null,"设置sstate-cache本地路径、配置BitBake镜像"),i("。")],-1),s("h3",{id:"_3-1-获取硬件描述并配置工程",tabindex:"-1"},[i("3.1 获取硬件描述并配置工程 "),s("a",{class:"header-anchor",href:"#_3-1-获取硬件描述并配置工程","aria-label":'Permalink to "3.1 获取硬件描述并配置工程"'},"​")],-1),s("p",null,[i("Vivado中完成硬件配置后，假如要进一步开发PS端裸机程序或者linux程序，就需要导出硬件,在菜单栏选择"),s("code",null,"File > Export > Export hardware"),i(",可以导出一个"),s("code",null,".xsa"),i("压缩包。里面包含PL端的比特流文件还有PS的初始化代码以及一些外设的信息。我们自己用AXI-Lite挂载到PS端的寄存器的信息都会包括在里面。")],-1),s("p",null,[i("petalinux通过以下指令获取硬件描述，"),s("code",null,".xsa"),i("中的内容会同步到"),s("code",null,"./project-spec/hw-description/"),i(" 目录下")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 直接指定.xsa文件的路径")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-config"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get-hw-description"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"Vivado_Export_to_SDK_Director"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"y"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"/system.xsa")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 指定 <Export hardware> 时选择的目录")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-config"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get-hw-description="),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},"<"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}},"Vivado_Export_to_SDK_Directory"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")]),i(`
`),s("span",{class:"line"}),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6A737D","--shiki-dark":"#6A737D"}},"# 或者工程目录下就有.xsa文件")]),i(`
`),s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-config"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --get-hw-description")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("获取一次硬件描述后，之后只需要"),s("code",null,"petalinux-config"),i("指令就可以打开配置界面")],-1),s("p",null,[s("strong",null,"常见配置：")],-1),s("ol",null,[s("li",null,[s("p",null,"选择根文件系统类型，决定启动方式（jtag/sd卡/nfs）"),s("p",null,[s("code",null,"misc/config System → Image Packaging Configuration → Root filesystem type")])]),s("li",null,[s("p",null,"设置linux内核源码；可以使用petalinux内置的也可以使用其他路径下的源码"),s("ul",null,[s("li",null,[s("code",null,"Linux Components Selection → linux-kernel"),i("菜单下选择 "),s("code",null,"ext-local-src")]),s("li",null,[i("设置路径 "),s("code",null,"Linux Components Selection → External linux-kernel local source settings")])])])],-1),s("h3",{id:"_3-2-设置本地sstate-cache和bitbake镜像",tabindex:"-1"},[i("3.2 设置本地sstate-cache和BitBake镜像 "),s("a",{class:"header-anchor",href:"#_3-2-设置本地sstate-cache和bitbake镜像","aria-label":'Permalink to "3.2 设置本地sstate-cache和BitBake镜像"'},"​")],-1),s("p",null,[i("因为网络问题，将sstate-cache和BitBake镜像都设置成本地的会更方便，即使网好我也建议设置到本地，因为设置成本地petalinux会创建软链接，而不是把文件下载下来，可以省很多空间。"),s("a",{href:"https://china.xilinx.com/support/download/index.html/content/xilinx/zh/downloadNav/embedded-design-tools/archive.html",target:"_blank",rel:"noreferrer"},"下载地址")],-1),s("figure",null,[s("img",{src:E,alt:"软链接",loading:"lazy",decoding:"async"})],-1),s("h4",{id:"_3-2-1-设置bitbake本地镜像",tabindex:"-1"},[i("3.2.1 设置BitBake本地镜像 "),s("a",{class:"header-anchor",href:"#_3-2-1-设置bitbake本地镜像","aria-label":'Permalink to "3.2.1 设置BitBake本地镜像"'},"​")],-1),s("p",null,[s("code",null,"petalinux-config"),i("指令打开menuconfig界面，进入到"),s("code",null,"Yocto Settings → Add pre-mirror url"),i("，填入’file://<本地地址>'，比如我下载下来的解压到了"),s("code",null,"/opt/petalinux-cache/downloads-2020.2.2-k26"),i("目录，那我填入的就是：")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"file:///opt/petalinux-cache/downloads-2020.2.2-k26")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("然后在"),s("code",null,"project-spec/meta-user/conf/petalinuxbsp.conf"),i("文件中添加如下内容")],-1),s("div",{style:{"max-height":"500px"},class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",null,'PREMIRRORS_prepend = " \\')]),i(`
`),s("span",{class:"line"},[s("span",null,"git://.*/.* file:///opt/petalinux-cache/downloads-2020.2.2-k26 \\n \\")]),i(`
`),s("span",{class:"line"},[s("span",null,"gitsm://.*/.* file:///opt/petalinux-cache/downloads-2020.2.2-k26 \\n \\")]),i(`
`),s("span",{class:"line"},[s("span",null,"ftp://.*/.* file:///opt/petalinux-cache/downloads-2020.2.2-k26 \\n \\")]),i(`
`),s("span",{class:"line"},[s("span",null,"http://.*/.* file:///opt/petalinux-cache/downloads-2020.2.2-k26 \\n \\")]),i(`
`),s("span",{class:"line"},[s("span",null,'https://.*/.* file:///opt/petalinux-cache/downloads-2020.2.2-k26 \\n"')])])]),s("button",{class:"collapse"})],-1),s("h4",{id:"_3-2-2-设置本地sstate路径",tabindex:"-1"},[i("3.2.2 设置本地sstate路径 "),s("a",{class:"header-anchor",href:"#_3-2-2-设置本地sstate路径","aria-label":'Permalink to "3.2.2 设置本地sstate路径"'},"​")],-1),s("p",null,[s("code",null,"petalinux-config"),i("指令打开menuconfig界面，进入到"),s("code",null,"Yocto Settings → Local sstate feeds settings "),i(",填入下载的sstate-cache工件解压地址，比如我是")],-1),s("div",{style:{"max-height":"500px"},class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",null,"/opt/petalinux-cache/sstate_arm_2020.2/arm")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("然后把"),s("code",null,"Yocto Settings → Enable Network sstate feeds"),i("取消掉就可以。")],-1),s("p",null,"注意解压出来的文件夹是sstate_arm_2020.2，里面还有子文件夹，选自己使用芯片的架构。比如Zynq-7000的Cortex-A9是arm，Zynq UltraScale+ MPSoC的Cortex-A53是aarch64。",-1),s("h3",{id:"_3-3-配置kernel",tabindex:"-1"},[i("3.3 配置kernel "),s("a",{class:"header-anchor",href:"#_3-3-配置kernel","aria-label":'Permalink to "3.3 配置kernel"'},"​")],-1),s("p",null,"使用以下指令，会在编译一部分组件后打开内核配置界面",-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-config"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -c"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," kernel")])])]),s("button",{class:"collapse"})],-1),s("h3",{id:"_3-4-配置rootfs",tabindex:"-1"},[i("3.4 配置rootfs "),s("a",{class:"header-anchor",href:"#_3-4-配置rootfs","aria-label":'Permalink to "3.4 配置rootfs"'},"​")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-config"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -c"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," rootfs")])])]),s("button",{class:"collapse"})],-1),s("p",null,[s("strong",null,"常用选项")],-1),s("h2",{id:"_4-配置设备树",tabindex:"-1"},[i("4. 配置设备树 "),s("a",{class:"header-anchor",href:"#_4-配置设备树","aria-label":'Permalink to "4. 配置设备树"'},"​")],-1),s("p",null,[i("ZYNQ往往在PL端有自己设计的硬件，需要配置设备树，在"),s("code",null,"project-spec/meta-user/recipes-bsp/device-tree/files/"),i("路径下")],-1),s("h2",{id:"_5-编译工程",tabindex:"-1"},[i("5. 编译工程 "),s("a",{class:"header-anchor",href:"#_5-编译工程","aria-label":'Permalink to "5. 编译工程"'},"​")],-1),s("div",{style:{"max-height":"500px"},class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",null,"petalinux-build")])])]),s("button",{class:"collapse"})],-1),s("h2",{id:"_6-打包-boot-bin-启动文件",tabindex:"-1"},[i("6. 打包 BOOT.bin 启动文件 "),s("a",{class:"header-anchor",href:"#_6-打包-boot-bin-启动文件","aria-label":'Permalink to "6. 打包 BOOT.bin 启动文件"'},"​")],-1),s("div",{style:{"max-height":"500px"},class:"language-shell vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"shell"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-package"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --boot"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --fsbl"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --fpga"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --u-boot")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("ZynqMP平台还要加上"),s("code",null,"--pmufw")],-1),s("div",{style:{"max-height":"500px"},class:"language- vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"}),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",null,"petalinux-package --boot --fsbl --fpga --u-boot --pmufw")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("将"),s("code",null,"linux/image"),i("文件中的BOOT.bin、boot.scr和image.ub拷贝到SD卡的boot分区即可。三个文件的作用如下：")],-1),s("ul",null,[s("li",null,[s("p",null,[s("strong",null,"BOOT.BIN"),i("：这是启动二进制文件，通常包含以下内容：")]),s("ul",null,[s("li",null,[s("strong",null,"FSBL（First Stage Bootloader）"),i("：负责初始化硬件并加载第二阶段引导程序。")]),s("li",null,[s("strong",null,"Bitstream"),i("：用于配置FPGA。")]),s("li",null,[s("strong",null,"U-Boot"),i("：作为第二阶段引导程序，负责加载操作系统内核。")])])]),s("li",null,[s("p",null,[s("strong",null,"boot.scr"),i("：这是一个U-Boot脚本文件，包含启动命令。它告诉U-Boot如何加载和启动Linux内核以及其他必要的组件。")])]),s("li",null,[s("p",null,[s("strong",null,"image.ub"),i("：这是一个包含Linux内核、设备树和根文件系统的统一镜像文件。U-Boot根据"),s("code",null,"boot.scr"),i("中的指令加载并启动这个镜像文件。")])])],-1),s("h1",{id:"_7-构建sdk",tabindex:"-1"},[i("7. 构建SDK "),s("a",{class:"header-anchor",href:"#_7-构建sdk","aria-label":'Permalink to "7. 构建SDK"'},"​")],-1),s("div",{style:{"max-height":"500px"},class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-build"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --sdk")])])]),s("button",{class:"collapse"})],-1),s("p",null,"setenv bootargs 'console=ttyPS0,115200 root=/dev/mmcblk0p2 rootwait rw rootfstype=ext4'",-1),s("h1",{id:"_8-打包工程",tabindex:"-1"},[i("8. 打包工程 "),s("a",{class:"header-anchor",href:"#_8-打包工程","aria-label":'Permalink to "8. 打包工程"'},"​")],-1),s("p",null,[s("strong",null,"打包工程成.BSP")],-1),s("div",{style:{"max-height":"500px"},class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-package"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --bsp"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -p"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"PATH_TO_PROJEC"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"T"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," --output"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," MY.BSP")])])]),s("button",{class:"collapse"})],-1),s("p",null,[s("strong",null,"从BSP创建工程")],-1),s("div",{style:{"max-height":"500px"},class:"language-sh vp-adaptive-theme"},[s("button",{title:"Copy Code",class:"copy"}),s("span",{class:"lang"},"sh"),s("pre",{class:"shiki shiki-themes github-light github-dark vp-code"},[s("code",{"v-pre":""},[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#6F42C1","--shiki-dark":"#B392F0"}},"petalinux-create"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -t"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}}," project"),s("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#79B8FF"}}," -s"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}}," <"),s("span",{style:{"--shiki-light":"#032F62","--shiki-dark":"#9ECBFF"}},"path-to-bs"),s("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#E1E4E8"}},"p"),s("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#F97583"}},">")])])]),s("button",{class:"collapse"})],-1),s("p",null,[i("详见"),s("a",{href:"https://docs.amd.com/r/2020.2-English/ug1144-petalinux-tools-reference-guide/Steps-for-BSP-Packaging",target:"_blank",rel:"noreferrer"},"《PetaLinux Tools Documentation: Reference Guide (UG1144) 》-- BSP Packaging"),i("：")],-1)])),"main-header":l(()=>[e(a.$slots,"main-header")]),"main-header-after":l(()=>[e(a.$slots,"main-header-after")]),"main-nav":l(()=>[e(a.$slots,"main-nav")]),"main-content-before":l(()=>[e(a.$slots,"main-content-before")]),"main-content":l(()=>[e(a.$slots,"main-content")]),"main-content-after":l(()=>[e(a.$slots,"main-content-after")]),"main-nav-before":l(()=>[e(a.$slots,"main-nav-before")]),"main-nav-after":l(()=>[e(a.$slots,"main-nav-after")]),comment:l(()=>[e(a.$slots,"comment")]),footer:l(()=>[e(a.$slots,"footer")]),aside:l(()=>[e(a.$slots,"aside")]),"aside-custom":l(()=>[e(a.$slots,"aside-custom")]),default:l(()=>[e(a.$slots,"default")]),_:3},8,["frontmatter"])}}};export{z as default,b as usePageData};
